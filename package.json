{
  "name": "gemini-mcp-server",
  "version": "1.0.0",
  "description": "MCP server to proxy queries to Google AI (Gemini models) via Vertex AI or Google AI Studio",
  "type": "module",
  "main": "./build/index.js",
  "bin": {
    "gemini-mcp-server": "./build/index.js"
  },
  "files": [
    "build",
    "README.md",
    "LICENSE",
    ".env.example"
  ],
  "scripts": {
    "build": "tsc && chmod +x build/index.js",
    "postinstall": "npm run build",
    "prepublishOnly": "npm run build",
    "watch": "tsc --watch",
    "dev": "tsx src/index.ts",
    "start": "node build/index.js",
    "clean": "rm -rf build",
    "test:mcp": "npx @modelcontextprotocol/inspector node build/index.js",
    "test:list": "echo '{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"tools/list\",\"params\":{}}' | node build/index.js",
    "test:query": "echo '{\"jsonrpc\":\"2.0\",\"id\":2,\"method\":\"tools/call\",\"params\":{\"name\":\"query\",\"arguments\":{\"prompt\":\"Hello\"}}}' | node build/index.js 2>&1",
    "test:env": "node -e 'console.log(\"Project:\", process.env.GOOGLE_CLOUD_PROJECT); console.log(\"Location:\", process.env.GOOGLE_CLOUD_LOCATION); console.log(\"Model:\", process.env.GEMINI_MODEL || \"gemini-2.5-pro\")'"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "gemini",
    "google-ai",
    "vertex-ai",
    "google-cloud"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "@google/genai": "^1.27.0",
    "@modelcontextprotocol/sdk": "^1.20.1",
    "dotenv": "^17.2.3",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/node": "^24.9.1",
    "tsx": "^4.20.6",
    "typescript": "^5.9.3"
  }
}